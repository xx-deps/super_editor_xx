name: super_keyboard
description: "A plugin that reports keyboard visibility and size."
version: 0.1.0+1
homepage: https://github.com/superlistapp/super_editor
funding:
  - https://flutterbountyhunters.com
  - https://github.com/sponsors/matthew-carroll
topics:
  - software-keyboard
  - keyboard
  - rich-text-editor
  - editor

environment:
  sdk: ^3.5.0
  flutter: '>=3.32.0'

dependencies:
  flutter:
    sdk: flutter

  plugin_platform_interface: ^2.0.2
  # For accessing Activity lifecycle within the Android plugin implementation.
  # References:
  #  * https://api.flutter.dev/javadoc/io/flutter/embedding/engine/plugins/activity/ActivityPluginBinding.html#getLifecycle()
  #  * https://github.com/flutter/plugins/tree/master_archive/packages/flutter_plugin_android_lifecycle
  flutter_plugin_android_lifecycle: ^2.0.27

  logging: ^1.3.0

  # So that we can expose test tools to apps.
  flutter_test:
    sdk: flutter
  flutter_test_runners: ^0.0.4

dev_dependencies:
  flutter_lints: ^4.0.0

  flutter_test_goldens: 0.0.5

flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: com.flutterbountyhunters.superkeyboard.super_keyboard
        pluginClass: SuperKeyboardPlugin
      ios:
        pluginClass: SuperKeyboardPlugin
